# -*- coding: utf-8 -*-
"""Linear Regression_Python (Basic).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17l5NoX8O8njxEYZVfk5dThMDJmwSRsa9
"""

import numpy as np
import matplotlib.pyplot as plt

def main():
  # observations
  x = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
  y = np.array([1, 3, 2, 5, 7, 8, 8, 9, 10, 12])
  x1 = np.array([10,11,12,13,14,15,16,17,18,19])
  
  # estimating coefficients
  n = np.size(x)
  # 10
  
  # mean of x and y vector
  m_x, m_y = np.mean(x), np.mean(y)
  
  # calculating cross-deviation and deviation about x
  SS_xy = np.sum(y*x) - n*m_y*m_x
  SS_xx = np.sum(x*x) - n*m_x*m_x
  
  # calculating regression coefficients
  b_1 = SS_xy / SS_xx # Slope
  b_0 = m_y - b_1*m_x 
  plt.scatter(x, y, color = "m", marker = "o", s = 30)
  print("Estimated coefficients:\nb_0 = {} \nb_1 = {}".format(b_0, b_1))

  y_pred = b_1*x + b_0
  print(y_pred)
  plt.plot(x1, y_pred)

	
if __name__ == "__main__":
	main()